# -*- coding: utf-8 -*-
# Author:Joey ma

# Python变量	什么是变量？	是一个存储数据的容器

# 		变量特性	引用着某个具体数值

# 			并且可以改变这个引用
# 	怎样定义变量?	方式1	变量名 = 值	赋值语句
# 				右边的值放到箱子里, 然后把箱子的唯一标识给变量名称
# 		方式2	变量名1, 变量名2 = 值1, 值2
# 		方式3	变量名1 = 变量名2 = 值

# 	为什么会产生变量？	方便维护	比如: 我要计算 6 + 1; 6 + 2; 6 + 3; 6 + 4; 6 + 5;
# 			代码1	print(6 + 1)
# 				print(6 + 2)
# 				print(6 + 3)
# 				print(6 + 4)
# 				print(6 + 5)
# 			计算好之后, 突然有个新的需求, 把所有的6 都改成8; 该如何做?
# 			方案	  方案1: 针对于具体的地方一个一个更改
# 				  方案2: 使用编辑器带的替换功能, 进行批量替换(慎用), 会替换掉, 所有匹配项
# 				  方案3: 抽取变量(推荐)	n = 8
# 					print(n + 1)
# 					print(n + 2)
# 					print(n + 3)
# 					print(n + 4)
# 					print(n + 5)
# 		节省空间	比如:打印多遍 "社会我顺哥, 人狠话不多"
# 			引发的问题	  这样整个源码文件会比较大, 占用磁盘空间
# 				  当解释执行这些字符串的时候, 都会开辟内存空间, 要开辟多份, 占用内存空间
# 	变量注意事项	一个变量只能引用一个数值
# 		命名规范	字母数字下划线	不能使用数字开头
# 			见名知意
# 			驼峰标识
# 			非关键字	查看关键字	import keyword
# 					keyword.kwlist
# 			区分大小写
# 		变量名使用之前一定要赋值

# 第一种赋值方式
# 变量 = 值
a = 1
b = 2
print(a, b)

# 第二种赋值方式
# 变量名1, 变量名2, = 值1, 值2

a, b = 2, 3
print(a, b)

# 第三种赋值方式
a = 6
b = 6
a, b = 6, 6

a = b = 3
print(a, b)

# ctrl + D 可以复制粘贴光标所在的行
# 6 + 1; 6 + 2; 6 + 3; 6 + 4; 6 + 5
print(6 + 1)
print(6 + 2)
print(6 + 3)
print(6 + 4)
print(6 + 5)

# ctrl + R 替换
num = 6
print(num + 1)
print(num + 2)
print(num + 3)
print(num + 4)
print(num + 5)

# 节省磁盘空间(磁盘，内存)
# 打印十遍 "社会我顺哥， 人狠话不多"
# 如果是这么打印，会占用很多磁盘空间
# print("社会我顺哥， 人狠话不多" + "1")
# print("社会我顺哥， 人狠话不多" + "2")
# print("社会我顺哥， 人狠话不多" + "3")
# print("社会我顺哥， 人狠话不多" + "4")
# print("社会我顺哥， 人狠话不多" + "5")
# print("社会我顺哥， 人狠话不多" + "6")
# print("社会我顺哥， 人狠话不多" + "7")
# print("社会我顺哥， 人狠话不多" + "8")
# print("社会我顺哥， 人狠话不多" + "9")
# print("社会我顺哥， 人狠话不多" + "10")

# 调优的写法
# 这样的写法会节约很多磁盘空间，用name来替代
# name = "社会我顺哥， 人狠话不多"
# print("name" + "1")
# print("name" + "2")
# print("name" + "3")
# print("name" + "4")
# print("name" + "5")
# print("name" + "6")
# print("name" + "7")
# print("name" + "8")
# print("name" + "9")
# print("name" + "10")

# 一个变量只能引用一个数值

# 这里打印出来就是11，不会同时出现两个age的值
# age = 10
# age = 11
# print(age)

                                                #命名规范

# 1、字母数字下划线
name = 'sz'
_name_ = "sz2" # 这个是被允许的有下划线
4_name = "sz3" # 数字不能放首位，这个操作会报错


# 2、见名知意
phoneNum = '13588899986' # 看到名称就知道这个是什么标识，电话号码


# 3、驼峰标识
phoneNum = '13588899986' # N大写，相当于驼峰，可以和前面的phone区分，能看的出具体的含义

# 4、非关键字
class as from 等等 都是关键字，所以作为变量名不合适，看到这个红色字体就知道是关键字
所以如果用 name ipaid 什么的作为变量名都没问题

#以下这个命令可以查看出关键字有哪些
import keyword
print(keyword.kwlist)

# 5、区分大小写
# 变量是区分大小写的，再一下这两个名词中可以执行成功
name='sz'
NamE='sz2'
print(name,NamE)

# 6、变量名使用之前一定要赋值
# 这个name再上面已经赋值过了，所以可以执行成功，table是一个没有赋值的变量所以如果允许，会导致失败
print(name)
print(table)
